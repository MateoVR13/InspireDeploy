<!DOCTYPE html>
<html lang="es">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title><%= course.name %> - InspireIQ</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.0.2/dist/css/bootstrap.min.css" rel="stylesheet">
    <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css" rel="stylesheet">
    <link href="https://fonts.googleapis.com/icon?family=Material+Icons" rel="stylesheet">
    <link rel="stylesheet" href="/styles.css">
    <style>
        /* Estilos específicos para el sistema de reseñas */
        .rating-input {
            display: flex;
            flex-direction: row-reverse;
            justify-content: flex-end;
        }
        
        .rating-input input {
            display: none;
        }
        
        .rating-input label {
            color: #ddd;
            cursor: pointer;
            font-size: 1.5rem;
            padding: 0 0.1em;
        }
        
        .rating-input label:hover,
        .rating-input label:hover ~ label,
        .rating-input input:checked ~ label {
            color: #ffd700;
        }
        
        .review-form-enter {
            opacity: 0;
            max-height: 0;
            overflow: hidden;
            transition: all 0.3s ease-in-out;
        }
        
        .review-form-enter.show {
            opacity: 1;
            max-height: 500px;
        }
    </style>
</head>

<body class="bg-dark text-white">
    <header>
        <%- include('partials/navigation') %>
    </header>

    <div class="container-fluid player-container">
        <div class="row player-content">
            <!-- Video Section -->
            <div class="col-md-9 player-video-section" id="videoSection">
                <div class="player-video-wrapper position-relative">
                    <% if (sections.length > 0 && currentSectionVideoUrl) { %>
                        <iframe 
                            id="videoPlayer"
                            src="<%= currentSectionVideoUrl %>"
                            title="Video del curso"
                            class="w-100"
                            frameborder="0"
                            allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture"
                            allowfullscreen>
                        </iframe>
                        <!-- Botón para mostrar sidebar en móviles -->
                        <button id="showSidebar" class="btn btn-light position-absolute top-0 end-0 m-2 d-md-none">
                            <i class="fas fa-list"></i>
                        </button>
                    <% } else { %>
                        <div class="alert alert-info">No hay videos disponibles para este curso.</div>
                    <% } %>
                </div>

                <!-- Course Details -->
                <div class="mt-4 course-info">
                    <h2 class="player-course-title"><%= course.name %></h2>
                    <hr>
                    <h4 id="currentSectionTitle">Sección: <%= sections.length > 0 ? sections[0].title : '' %></h4>
                    
                    <div class="course-meta my-3">
                        <span class="badge bg-primary me-2">
                            <i class="fas fa-calendar"></i> <%= new Date(course.creation_date).toLocaleDateString() %>
                        </span>
                        <span class="badge bg-secondary me-2">
                            <i class="fas fa-language"></i> <%= course.language %>
                        </span>
                        <% if (course.category) { %>
                            <span class="badge badge-category">
                                <i class="fas fa-tags"></i> <%= course.category %>
                            </span>
                        <% } %>
                    </div>
                
                    <div class="course-description">
                        <h5>Descripción:</h5>
                        <p class="player-course-description"><%= course.description %></p>
                    </div>
                </div>

          <!-- Updated Ratings Section -->
          <div class="reviews-list mt-4">
            <h5>Reseñas de estudiantes</h5>
            <% if (ratings.length > 0) { %>
                <div class="list-group">
                    <% ratings.forEach(rating => { %>
                        <div class="list-group-item bg-dark text-white border-secondary">
                            <div class="d-flex justify-content-between align-items-start">
                                <div>
                                    <h6 class="mb-1"><%= rating.first_name %> <%= rating.last_name %></h6>
                                    <div class="mb-2">
                                        <% for (let i = 1; i <= 5; i++) { %>
                                            <i class="<%= i <= rating.rating ? 'fas' : 'far' %> fa-star text-warning"></i>
                                        <% } %>
                                    </div>
                                </div>
                                <small class="text-muted"><%= new Date(rating.created_at).toLocaleDateString() %></small>
                            </div>
                            <p class="mb-1"><%= rating.comment %></p>
                        </div>
                    <% }); %>
                </div>
            <% } else { %>
                <p>No hay reseñas todavía. ¡Sé el primero en compartir tu experiencia!</p>
            <% } %>

            <% if (userId && !hasRated) { %>
                <div class="mt-3 text-center">
                    <button type="button" class="btn btn-primary" id="leaveReviewBtn">
                        Deja tu reseña
                    </button>
                </div>

                <div class="review-form-enter mt-4" id="reviewFormContainer">
                    <form id="reviewForm" class="needs-validation" novalidate>
                        <input type="hidden" name="course_id" value="<%= course.course_id %>">
                        <input type="hidden" name="user_id" value="<%= userId %>">
                        
                        <div class="mb-3">
                            <label class="form-label">Calificación:</label>
                            <div class="rating-input">
                                <% for (let i = 5; i >= 1; i--) { %>
                                    <input type="radio" id="star<%= i %>" name="rating" value="<%= i %>" required>
                                    <label for="star<%= i %>" title="<%= i %> estrellas">
                                        <i class="fas fa-star"></i>
                                    </label>
                                <% } %>
                            </div>
                            <div class="invalid-feedback">
                                Por favor selecciona una calificación
                            </div>
                        </div>
                        
                        <div class="mb-3">
                            <label for="comment" class="form-label">Comentario:</label>
                            <textarea 
                                id="comment" 
                                name="comment" 
                                class="form-control bg-dark text-white" 
                                rows="4" 
                                placeholder="Comparte tu experiencia con el curso"
                                required
                                minlength="10"
                                maxlength="500"
                            ></textarea>
                            <div class="invalid-feedback">
                                Por favor escribe un comentario (mínimo 10 caracteres)
                            </div>
                        </div>
                        
                        <div class="d-flex justify-content-between">
                            <button type="submit" class="btn btn-primary">
                                Enviar reseña
                            </button>
                            <button type="button" class="btn btn-secondary" id="cancelReviewBtn">
                                Cancelar
                            </button>
                        </div>
                    </form>
                </div>
            <% } else if (hasRated) { %>
                <p class="text-muted mt-3">Ya has valorado este curso.</p>
            <% } %>
        </div>
                                
            </div>

            <!-- Course Content Sidebar -->
            <div id="courseSidebar" class="col-md-3 player-sidebar">
                <div class="player-sidebar-header d-flex justify-content-between align-items-center p-3">
                    <h5 class="mb-0">Contenido del curso</h5>
                    <button id="closeSidebar" class="btn btn-sm btn-light d-md-none">
                        <i class="fas fa-times"></i>
                    </button>
                </div>

                <div class="player-accordion" id="courseAccordion">
                    <% sections.forEach((section, index) => { %>
                        <div class="player-accordion-item mb-2" data-section-id="<%= section.section_id %>">
                            <div class="player-section-header p-3 <%= index === 0 ? 'active-section' : '' %>">
                                <button 
                                class="btn btn-link text-white text-decoration-none video-selector w-100 text-start d-flex align-items-center"
                                data-video-url="<%= section.video_url %>"
                                data-section-title="<%= section.title %>"
                                data-section-index="<%= index %>"
                                data-section-id="<%= section.section_id %>"
                                onclick="changeVideo(this)">
                                <i class="fas fa-play-circle me-2"></i>
                                <span><%= section.title %></span>
                            </button>
                            </div>
                        </div>
                    <% }); %>
                </div>
            </div>
        </div>
    </div>

    <!-- Scripts -->
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
    <script src="https://www.youtube.com/iframe_api"></script>
    <script>
        // Función para alternar la visibilidad del formulario de reseña
        document.addEventListener('DOMContentLoaded', function() {
            console.log('DOM fully loaded');
            const leaveReviewBtn = document.getElementById('leaveReviewBtn');
            const cancelReviewBtn = document.getElementById('cancelReviewBtn');
            const reviewFormContainer = document.getElementById('reviewFormContainer');
            const reviewForm = document.getElementById('reviewForm');
    
            // Función para crear el HTML de una nueva reseña
            function createReviewHTML(review) {
                return `
                    <div class="list-group-item bg-dark text-white border-secondary">
                        <div class="d-flex justify-content-between align-items-start">
                            <div>
                                <h6 class="mb-1">${review.first_name} ${review.last_name}</h6>
                                <div class="mb-2">
                                    ${Array(5).fill(0).map((_, i) => 
                                        `<i class="${i < review.rating ? 'fas' : 'far'} fa-star text-warning"></i>`
                                    ).join('')}
                                </div>
                            </div>
                            <small class="text-muted">${new Date(review.created_at).toLocaleDateString()}</small>
                        </div>
                        <p class="mb-1">${review.comment}</p>
                    </div>
                `;
            }
    
            function toggleReviewForm(show) {
                if (show) {
                    reviewFormContainer.classList.add('show');
                    leaveReviewBtn.style.display = 'none';
                } else {
                    reviewFormContainer.classList.remove('show');
                    leaveReviewBtn.style.display = 'block';
                    reviewForm.reset();
                    clearValidation();
                }
            }
    
            function clearValidation() {
                reviewForm.classList.remove('was-validated');
                const inputs = reviewForm.querySelectorAll('.is-invalid');
                inputs.forEach(input => input.classList.remove('is-invalid'));
            }
    
            if (leaveReviewBtn) {
                leaveReviewBtn.addEventListener('click', () => toggleReviewForm(true));
            }
    
            if (cancelReviewBtn) {
                cancelReviewBtn.addEventListener('click', () => toggleReviewForm(false));
            }
    
            if (reviewForm) {
                reviewForm.addEventListener('submit', function(event) {
                    event.preventDefault();
                    
                    if (!reviewForm.checkValidity()) {
                        event.stopPropagation();
                        reviewForm.classList.add('was-validated');
                        return;
                    }
    
                    const formData = new FormData(reviewForm);
                    const reviewData = {
                        course_id: formData.get('course_id'),
                        user_id: formData.get('user_id'),
                        rating: formData.get('rating'),
                        comment: formData.get('comment')
                    };
    
                    // Mostrar indicador de carga
                    const submitBtn = reviewForm.querySelector('button[type="submit"]');
                    const originalBtnText = submitBtn.innerHTML;
                    submitBtn.disabled = true;
                    submitBtn.innerHTML = '<i class="fas fa-spinner fa-spin"></i> Enviando...';
    
                    fetch('/rate_course', {
                        method: 'POST',
                        headers: {
                            'Content-Type': 'application/json',
                        },
                        body: JSON.stringify(reviewData)
                    })
                    .then(response => response.json())
                    .then(data => {
                        if (data.success) {
                            // Crear y añadir la nueva reseña al principio de la lista
                            const reviewsList = document.querySelector('.list-group');
                            if (reviewsList) {
                                const newReviewHTML = createReviewHTML(data.data.newRating);
                                if (reviewsList.children.length === 0) {
                                    // Si no hay reseñas, reemplazar el mensaje de "no hay reseñas"
                                    reviewsList.innerHTML = newReviewHTML;
                                } else {
                                    // Añadir al principio de la lista
                                    reviewsList.insertAdjacentHTML('afterbegin', newReviewHTML);
                                }
                            }
    
                            // Actualizar la UI para mostrar que el usuario ya ha valorado
                            const reviewSection = document.querySelector('.reviews-list');
                            reviewSection.querySelector('#leaveReviewBtn')?.remove();
                            reviewSection.querySelector('#reviewFormContainer')?.remove();
                            reviewSection.insertAdjacentHTML('beforeend', '<p class="text-muted mt-3">Ya has valorado este curso.</p>');
    
                            // Mostrar mensaje de éxito
                            const alertHTML = `
                                <div class="alert alert-success alert-dismissible fade show" role="alert">
                                    ${data.message}
                                    <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
                                </div>
                            `;
                            reviewSection.insertAdjacentHTML('afterbegin', alertHTML);
                        } else {
                            // Mostrar error
                            const alertHTML = `
                                <div class="alert alert-danger alert-dismissible fade show" role="alert">
                                    ${data.message}
                                    <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
                                </div>
                            `;
                            reviewForm.insertAdjacentHTML('beforebegin', alertHTML);
                        }
                    })
                    .catch(error => {
                        console.error('Error:', error);
                        const alertHTML = `
                            <div class="alert alert-danger alert-dismissible fade show" role="alert">
                                Error al enviar la reseña. Por favor intenta nuevamente.
                                <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
                            </div>
                        `;
                        reviewForm.insertAdjacentHTML('beforebegin', alertHTML);
                    })
                    .finally(() => {
                        // Restaurar el botón
                        submitBtn.disabled = false;
                        submitBtn.innerHTML = originalBtnText;
                    });
                });
            }
        });


        let currentSectionIndex = 0;

        function loadNewPlayer(videoUrl) {
            const videoIframe = document.getElementById('videoPlayer');

            if (!videoIframe) {
                console.error("No se encontró el elemento del reproductor de video");
                return;
            }

            const embedUrl = transformYouTubeUrl(videoUrl);
            if (!embedUrl) {
                console.error("No se pudo transformar la URL del video:", videoUrl);
                return;
            }

            videoIframe.src = embedUrl;
        }

        window.changeVideo = function(button) {
            const newUrl = button.getAttribute('data-video-url');
            const newTitle = button.getAttribute('data-section-title');
            const sectionIndex = button.getAttribute('data-section-index');
            const sectionId = button.getAttribute('data-section-id');

            loadNewPlayer(newUrl);
            document.getElementById('currentSectionTitle').textContent = `Sección: ${newTitle}`;
            updateProgress(sectionId);

            currentSectionIndex = parseInt(sectionIndex);

            document.querySelectorAll('.player-section-header').forEach(header => header.classList.remove('active-section'));
            button.parentElement.classList.add('active-section');
        };

        function goToNextSection() {
            const sections = <%- JSON.stringify(sections) %>;
            currentSectionIndex++;

            if (currentSectionIndex < sections.length) {
                const nextSection = sections[currentSectionIndex];
                document.getElementById('currentSectionTitle').textContent = `Sección: ${nextSection.title}`;
                loadNewPlayer(nextSection.video_url);
                updateProgress(nextSection.section_id);

                document.querySelectorAll('.player-section-header').forEach(header => header.classList.remove('active-section'));
                document.querySelectorAll('.player-section-header')[currentSectionIndex].classList.add('active-section');
            } else {
                console.log("Has completado todas las secciones del curso.");
            }
        }

        function transformYouTubeUrl(url) {
            try {
                const urlObj = new URL(url);
                let videoId = '';
                let startTime = '';

                if (urlObj.hostname === 'youtu.be') {
                    videoId = urlObj.pathname.substring(1);
                    startTime = urlObj.searchParams.get('t');
                } else if (urlObj.hostname.includes('youtube.com')) {
                    if (urlObj.pathname.includes('/embed/')) {
                        videoId = urlObj.pathname.split('/embed/')[1];
                        startTime = urlObj.searchParams.get('start');
                    } else if (urlObj.searchParams.get('v')) {
                        videoId = urlObj.searchParams.get('v');
                        startTime = urlObj.searchParams.get('t');
                    }
                } else {
                    console.error("Formato de URL no soportado:", url);
                    return '';
                }

                const startParam = startTime ? `?start=${convertYouTubeTimeToSeconds(startTime)}` : '';
                return `https://www.youtube.com/embed/${videoId}${startParam}`;
            } catch (e) {
                console.error("Error transformando URL de YouTube:", e);
                return '';
            }
        }

        function convertYouTubeTimeToSeconds(time) {
            const match = time.match(/(\d+)(h|m|s)/g);
            if (!match) return parseInt(time, 10);

            let seconds = 0;
            match.forEach(part => {
                const unit = part.slice(-1);
                const amount = parseInt(part.slice(0, -1), 10);

                if (unit === 'h') seconds += amount * 3600;
                if (unit === 'm') seconds += amount * 60;
                if (unit === 's') seconds += amount;
            });

            return seconds;
        }

        function updateProgress(lastViewedSectionId) {
            const totalSections = document.querySelectorAll('.player-section-header').length;
            const completedSections = currentSectionIndex + 1;

            fetch(`/course/<%= course.course_id %>/update-progress`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify({
                    lastViewedSection: lastViewedSectionId,
                    completedSections,
                    totalSections
                })
            })
            .then(response => response.json())
            .then(data => {
                if (data.success) {
                    console.log('Progreso actualizado:', data.progress);
                } else {
                    console.error('Error al actualizar el progreso:', data.message);
                }
            })
            .catch(error => console.error('Error en la solicitud de progreso:', error));
        }
    </script>
    
    <%- include('partials/footer') %>
</body>
</html>
